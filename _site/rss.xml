<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>Katie Leonard</title>
        <description>Katie Leonard - Katie Leonard</description>
        <link>http://katieleonard.ca</link>
        <link>http://katieleonard.ca</link>
        <lastBuildDate>2013-06-29T11:12:49-07:00</lastBuildDate>
        <pubDate>2013-06-29T11:12:49-07:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>No index.html, no cry</title>
                <description>&lt;p&gt;Following along with &lt;a href=&#39;http://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional/dp/0321832051&#39;&gt;Rails tutorial&lt;/a&gt; by Michael Hartl, I built a sample app with a simple database, linking users to microposts in a twitter-like manner. Everything worked well locally, but when it came time to deploy on heroku, I ran across some interesting stumbling blocks:&lt;/p&gt;

&lt;h3 id=&#39;rails_4_does_not_come_with_a_default_indexhtml&#39;&gt;Rails 4 does not come with a default index.html&lt;/h3&gt;

&lt;p&gt;There I was, gleefully watching the slug compile on heroku (after several abortive attempts before I realized I had not moved the sqlite3 gem into the development environment &amp;#8211; heroku doesn&amp;#8217;t like that at all). All seemed fine, I typed&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;java&#39;&gt;&lt;span class=&#39;n&#39;&gt;$&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;heroku&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;open&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and what greeted me? A 404 error page! Something has gone horribly wrong! I have been rejected by heroku! I try again from the beginning, ensuring I have followed all the steps.. what could I have missed? Same result. But, Mr. Hartl, said it was easy&amp;#8230; what was I missing?&lt;/p&gt;

&lt;p&gt;After some digging, I found a &lt;a href=&#39;https://devcenter.heroku.com/articles/rails4-getting-started&#39;&gt;heroku tutorial&lt;/a&gt; on getting started with the shiny new Rails 4. Deep inside this article, I found the magic words:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;Note: that Rails 4 no longer has a static index page in production, if youâ€™re using a new app, there may be no root page.&amp;#8221;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Orly? Are you saying that the 404 error I was getting was actually generated by my properly deployed app? YES! I made some obvious change to the html&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;html&#39;&gt;&lt;span class=&#39;nt&#39;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;You made it!&lt;span class=&#39;nt&#39;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and redeployed. TADA!&lt;/p&gt;

&lt;p&gt;Awesome.&lt;/p&gt;</description>
                <link>http://katieleonard.ca/rails4/2013/06/29/no-indexhtml-no-cry</link>
                <guid>http://katieleonard.ca/rails4/2013/06/29/no-indexhtml-no-cry</guid>
                <pubDate>2013-06-29T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>Hoisting with JavaScript</title>
                <description>&lt;p&gt;I am really enjoying &lt;a href=&#39;http://www.amazon.com/Test-Driven-JavaScript-Development-Developers-Library/dp/0321683919&#39;&gt;Test-Driven Development&lt;/a&gt; by Christian Johansen&lt;/p&gt;

&lt;p&gt;I picked up this little gem this morning as I was learning about functions and the various objects associated with them:&lt;/p&gt;

&lt;p&gt;You CANNOT use function declarations in conditionals. Take this example:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;java&#39;&gt;&lt;span class=&#39;k&#39;&gt;if&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;String&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;prototype&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;trim&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;{&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;trim&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;str&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;{&lt;/span&gt;
    &lt;span class=&#39;k&#39;&gt;return&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;str&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;trim&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;();&lt;/span&gt;
  &lt;span class=&#39;o&#39;&gt;}&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;else&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;{&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;trim&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;str&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;){&lt;/span&gt;
    &lt;span class=&#39;k&#39;&gt;return&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;str&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;replace&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(/^&lt;/span&gt;&lt;span class=&#39;err&#39;&gt;\&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;s&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;+|&lt;/span&gt;&lt;span class=&#39;err&#39;&gt;\&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;s&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;+&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;$&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;/&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;g&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;s&#39;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;);&lt;/span&gt;
  &lt;span class=&#39;o&#39;&gt;}&lt;/span&gt;
&lt;span class=&#39;o&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What is wrong with that, you might ask? HOISTING! Both functions are hoisted up to the global variable before execution, which means that the second one always overwrites the first one.&lt;/p&gt;

&lt;p&gt;This is a better method:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;java&#39;&gt;&lt;span class=&#39;k&#39;&gt;if&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(!&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;String&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;prototype&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;trim&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;{&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;String&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;prototype&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;trim&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;trim&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;{&lt;/span&gt;
    &lt;span class=&#39;k&#39;&gt;return&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;replace&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(/^&lt;/span&gt;&lt;span class=&#39;err&#39;&gt;\&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;s&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;+|&lt;/span&gt;&lt;span class=&#39;err&#39;&gt;\&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;s&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;+&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;$&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;/&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;g&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;s&#39;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;
  &lt;span class=&#39;o&#39;&gt;}&lt;/span&gt;
&lt;span class=&#39;o&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way, we are not overwriting any browser-available Trim methods, we are declaring the method on the String.prototype, which means it is available to ALL strings in scope, AND we have named it so that it will be more visible in a stack trace in case something goes wrong.&lt;/p&gt;

&lt;p&gt;AWESOME&lt;/p&gt;</description>
                <link>http://katieleonard.ca/javascript/2013/06/26/hoisting-with-javascript</link>
                <guid>http://katieleonard.ca/javascript/2013/06/26/hoisting-with-javascript</guid>
                <pubDate>2013-06-26T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>Javascript has spies</title>
                <description>&lt;h2 id=&#39;spies_vs_mocks_vs_stubs&#39;&gt;Spies vs Mocks vs Stubs?&lt;/h2&gt;

&lt;p&gt;We are covering testing frameworks at PCS this week, particularly Jasmine and Sinon.&lt;/p&gt;

&lt;p&gt;Jasmine has a similar structure to RSpec:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;java&#39;&gt;&lt;span class=&#39;n&#39;&gt;describe&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;Class to describe&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;function&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;{&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;it&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;should have some behavior&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;function&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;{&lt;/span&gt;
    &lt;span class=&#39;c1&#39;&gt;//assertions&lt;/span&gt;
  &lt;span class=&#39;o&#39;&gt;});&lt;/span&gt;
&lt;span class=&#39;o&#39;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also similar to RSpec, Jasmine allows you to spy on behavior. Using spies, I can watch a method call and collect information about it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Want to know if it was called?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;java&#39;&gt;&lt;span class=&#39;n&#39;&gt;expect&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;method&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;).&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;toHaveBeenCalled&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Want to know how many times?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;java&#39;&gt;&lt;span class=&#39;n&#39;&gt;expect&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;method&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;callCount&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;).&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;toEqual&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;3&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Want to know how it was called?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;java&#39;&gt;&lt;span class=&#39;n&#39;&gt;expect&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;method&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;).&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;toHaveBeenCalledWith&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;args&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;java&#39;&gt;&lt;span class=&#39;n&#39;&gt;describe&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt; &lt;span class=&#39;s&#39;&gt;&amp;quot;Spy on methods&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;{&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;it&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt; &lt;span class=&#39;s&#39;&gt;&amp;quot;should watch calls to console&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;{&lt;/span&gt;
    &lt;span class=&#39;n&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;mySpy&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;spyOn&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;console&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;s&#39;&gt;&amp;quot;log&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;);&lt;/span&gt;
    &lt;span class=&#39;n&#39;&gt;console&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;log&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;test1&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;);&lt;/span&gt;
    &lt;span class=&#39;n&#39;&gt;console&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;log&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;test2&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;);&lt;/span&gt;
    &lt;span class=&#39;n&#39;&gt;console&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;log&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;test3&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;);&lt;/span&gt;

    &lt;span class=&#39;n&#39;&gt;expect&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;mySpy&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;callCount&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;).&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;toEqual&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;3&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;);&lt;/span&gt;
  &lt;span class=&#39;o&#39;&gt;});&lt;/span&gt;
&lt;span class=&#39;o&#39;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Tomorrow, I conquer Stubs and Mocks!&lt;/p&gt;</description>
                <link>http://katieleonard.ca/2013/06/25/javascript-has-spies</link>
                <guid>http://katieleonard.ca/2013/06/25/javascript-has-spies</guid>
                <pubDate>2013-06-25T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>jQuery objects vs strings</title>
                <description>&lt;h2 id=&#39;object_blocker&#39;&gt;Object blocker!!&lt;/h2&gt;

&lt;p&gt;My pair was stuck for the longest time on the following code snip:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;nx&#39;&gt;$&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;kd&#39;&gt;function&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(){&lt;/span&gt;
  &lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;new_square&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;$(&amp;lt;div class=&amp;quot;square&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;)&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;

  &lt;span class=&#39;nx&#39;&gt;$&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;).&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;on&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;.square&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;kd&#39;&gt;function&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(){&lt;/span&gt;
    &lt;span class=&#39;c1&#39;&gt;// var my_square = $(this);&lt;/span&gt;
    &lt;span class=&#39;nx&#39;&gt;$&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;k&#39;&gt;this&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;).&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;toggleClass&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;

    &lt;span class=&#39;nx&#39;&gt;b&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;$&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;new_square&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt;
      &lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;insertAfter&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;k&#39;&gt;this&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
    &lt;span class=&#39;nx&#39;&gt;a&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;$&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;new_square&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt;
      &lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;insertBefore&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;k&#39;&gt;this&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
    &lt;span class=&#39;nx&#39;&gt;b&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;toggleClass&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
    &lt;span class=&#39;nx&#39;&gt;a&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;toggleClass&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
  &lt;span class=&#39;p&#39;&gt;});&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We expected out output to include three elements &amp;#8211; the original square, one inserted after, and one inserted before. The output we were seeing included only two squares: the original one and the square inserted before. If we inverted the insert calls, we would see only one inserted after. We were totally stumped until we printed out the content of new_square:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt; &lt;span class=&#39;nx&#39;&gt;$&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;&amp;lt;div class=&amp;quot;square&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We were actually passing a reference to a jQuery OBJECT into the insert methods, so in essence, we were creating the object once and then passing it around to different locations. When we changed new_square from a jQuery object:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt; &lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;new_square&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;$(&amp;lt;div class=&amp;quot;square&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;)&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to a string&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt; &lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;new_square&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;&amp;lt;div class=&amp;quot;square&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We saw our third element appear no problem.&lt;/p&gt;</description>
                <link>http://katieleonard.ca/jquery/2013/06/19/jquery-objects-vs-strings</link>
                <guid>http://katieleonard.ca/jquery/2013/06/19/jquery-objects-vs-strings</guid>
                <pubDate>2013-06-19T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>Namespaces and jQuery</title>
                <description>&lt;h3 id=&#39;namespaces_in_jquery_getting_you_down&#39;&gt;Namespaces in jQuery getting you down?&lt;/h3&gt;

&lt;p&gt;Chuck taught me a great trick today &amp;#8211; how to avoid namespace conflicts in jQuery:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;kd&#39;&gt;function&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;$&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;){&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;...&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;})(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;jQuery&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function is being passed jQuery as an argument, and is assigning it the local variable $ &amp;#8211; allowing you to use the $ and reference the jQuery library.&lt;/p&gt;

&lt;p&gt;Awesome.&lt;/p&gt;</description>
                <link>http://katieleonard.ca/jquery/2013/06/18/solving-namespace-conflicts-with-jquery</link>
                <guid>http://katieleonard.ca/jquery/2013/06/18/solving-namespace-conflicts-with-jquery</guid>
                <pubDate>2013-06-18T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>Blogging with Jekyll Bootstrap</title>
                <description>&lt;p&gt;Building a portfolio has been a lot of fun and has required a couple of different technologies. A fellow PCS student has been blogging a long time, and he suggested using Jekyll in combination with github pages. What a fantastic gem! I found an even more awesome one at &lt;a href=&#39;http://jekyllbootstrap.com/&#39;&gt;jekyll-bootstrap&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now I am enjoying the power of bootstrap along with the ease of jekyll.&lt;/p&gt;

&lt;p&gt;To create a post&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;err&#39;&gt;$&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;rake&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;post&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;title&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;=&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create a new page:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;err&#39;&gt;$&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;rake&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;page&lt;/span&gt; &lt;span class=&#39;nb&#39;&gt;name&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;=&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;&amp;quot;pages/about&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Couldn&amp;#8217;t be simpler for a beginning blogger.&lt;/p&gt;</description>
                <link>http://katieleonard.ca/2013/06/15/blogging-with-jekyll-bootstrap</link>
                <guid>http://katieleonard.ca/2013/06/15/blogging-with-jekyll-bootstrap</guid>
                <pubDate>2013-06-15T00:00:00-07:00</pubDate>
        </item>

        <item>
                <title>I admit it, I love TDD</title>
                <description>&lt;p&gt;This week @PDXcodeschool we jumped into TDD using minitest/autorun. I have used RSpec in the past, and loved the way it let me manage the logic of my project. I love that ruby has a built in framework &amp;#8211; so easy to use!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use specs to rough out project logic&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;n&#39;&gt;describe&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Car&amp;quot;&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;do&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;it&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;should have a color&amp;#39;&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;it&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;should have a make&amp;#39;&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;it&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;should have a unique serial number&amp;#39;&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;it&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;should get a new serial number when it gets stolen&amp;#39;&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;it&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;should accept passengers&amp;#39;&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;it&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;should not accept more than 3 passengers&amp;#39;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All of these tests will be skipped until they are followed by a do&amp;#8230;end block.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Take one test at a time and write the code to make it pass&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;n&#39;&gt;describe&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Car&amp;quot;&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;do&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;it&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;should have a color&amp;#39;&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;do&lt;/span&gt;
    &lt;span class=&#39;n&#39;&gt;car&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;no&#39;&gt;Car&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;new&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt;
    &lt;span class=&#39;n&#39;&gt;car&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;color&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;must_equal&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;black&amp;quot;&lt;/span&gt;
  &lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;
  &lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your tests exercise the project well enough, you end up with really tight code. More of a lasagna noodle than spaghetti!&lt;/p&gt;</description>
                <link>http://katieleonard.ca/tdd/testing/2013/06/14/TDD-is-the-way-to-be</link>
                <guid>http://katieleonard.ca/tdd/testing/2013/06/14/TDD-is-the-way-to-be</guid>
                <pubDate>2013-06-14T00:00:00-07:00</pubDate>
        </item>


</channel>
</rss>
